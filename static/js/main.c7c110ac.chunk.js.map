{"version":3,"sources":["Components/Buttons.js","Components/SoundPanel.js","App.js","reportWebVitals.js","index.js"],"names":["Buttons","props","React","createElement","className","SoundPanel","_useState","useState","_useState2","_slicedToArray","monitorValue","setMonitorValue","_useState3","_useState4","volume","setVolume","type","onClick","e","document","querySelector","checked","setPower","defaultChecked","power","min","max","value","onChange","target","concat","disabled","App","id","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"wKAoBeA,QAhBC,SAAAC,GACZ,OACAC,IAAAC,cAAA,WAASC,UAAU,gBACfF,IAAAC,cAAA,UAAQC,UAAU,YAAW,KAC7BF,IAAAC,cAAA,UAAQC,UAAU,YAAW,KAC7BF,IAAAC,cAAA,UAAQC,UAAU,YAAW,KAC7BF,IAAAC,cAAA,UAAQC,UAAU,YAAW,KAC7BF,IAAAC,cAAA,UAAQC,UAAU,YAAW,KAC7BF,IAAAC,cAAA,UAAQC,UAAU,YAAW,KAC7BF,IAAAC,cAAA,UAAQC,UAAU,YAAW,KAC7BF,IAAAC,cAAA,UAAQC,UAAU,YAAW,KAC7BF,IAAAC,cAAA,UAAQC,UAAU,YAAW,QCoBtBC,EA/BI,SAAAJ,GAAS,IAAAK,EACgBC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA7CI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAAAI,EACRL,mBAAS,IAAGM,EAAAJ,YAAAG,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAWxB,OACIX,IAAAC,cAAA,WAASC,UAAU,eACfF,IAAAC,cAAA,SAAOC,UAAU,UACjBF,IAAAC,cAAA,UAAI,SACAD,IAAAC,cAAA,SAAOC,UAAU,QAAQY,KAAK,WAAWC,QARhC,SAAAC,GACjBC,SAASC,cAAc,UAAUC,QAAUpB,EAAMqB,UAAS,GAAQrB,EAAMqB,UAAS,IAOTC,gBAAc,IAC9ErB,IAAAC,cAAA,QAAMC,UAAU,kBAGpBF,IAAAC,cAAA,OAAKC,UAAU,WAAWH,EAAMuB,MAAQd,EAAe,IAEvDR,IAAAC,cAAA,OAAKC,UAAU,oBACXF,IAAAC,cAAA,UAAI,UACJD,IAAAC,cAAA,SAAOC,UAAU,eAAeY,KAAK,QAAQS,IAAI,IAAIC,IAAI,MAAMC,MAAOb,EAAQc,SArBpE,SAAAV,GAClBH,EAAUG,EAAEW,OAAOF,OACnBhB,EAAe,WAAAmB,OAAYhB,KAmBoFiB,UAAW9B,EAAMuB,WCZzHQ,MAZf,WAAe,IAAA1B,EACaC,oBAAS,GAAKC,EAAAC,YAAAH,EAAA,GAAjCkB,EAAKhB,EAAA,GAAEc,EAAQd,EAAA,GAEtB,OACEN,IAAAC,cAAA,QAAM8B,GAAG,gBAEP/B,IAAAC,cAACH,EAAO,CAACwB,MAAOA,IAChBtB,IAAAC,cAACE,EAAU,CAACmB,MAAOA,EAAOF,SAAUA,MCA3BY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAnB,EAAA,GAAAoB,KAAAD,EAAAE,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAW5B,SAAS6B,eAAe,SACpDC,OACH/C,IAAAC,cAACD,IAAMgD,WAAU,KACfhD,IAAAC,cAAC6B,EAAG,QAORE","file":"static/js/main.c7c110ac.chunk.js","sourcesContent":["import React from \"react\";\r\nimport '../App.css';\r\n\r\n\r\nconst Buttons = props => {\r\n    return(\r\n    <section className=\"sound-button\">\r\n        <button className=\"drum-pad\">Q</button>\r\n        <button className=\"drum-pad\">W</button>\r\n        <button className=\"drum-pad\">E</button>\r\n        <button className=\"drum-pad\">A</button>\r\n        <button className=\"drum-pad\">S</button>\r\n        <button className=\"drum-pad\">D</button>\r\n        <button className=\"drum-pad\">Z</button>\r\n        <button className=\"drum-pad\">X</button>\r\n        <button className=\"drum-pad\">C</button>\r\n    </section>\r\n    )\r\n}\r\n\r\nexport default Buttons;","import React, {useState} from \"react\";\r\nimport '../App.css';\r\n\r\n\r\nconst SoundPanel = props => {\r\n    const [monitorValue, setMonitorValue] = useState(\"\");\r\n    const [volume, setVolume] = useState(50); \r\n\r\n    const volumeHandler = e =>{\r\n        setVolume(e.target.value);\r\n        setMonitorValue(`Volume: ${volume}`);\r\n    }\r\n\r\n    const powerHandler = e => {\r\n        document.querySelector(\".power\").checked ? props.setPower(true) : props.setPower(false);\r\n    }\r\n\r\n    return(\r\n        <section className=\"sound-panel\">\r\n            <label className=\"switch\">\r\n            <h4>Power</h4>  \r\n                <input className=\"power\" type=\"checkbox\" onClick={powerHandler} defaultChecked/>\r\n                <span className=\"slider round\"></span>\r\n            </label>\r\n            \r\n            <div className=\"monitor\">{props.power ? monitorValue : \"\"}</div>\r\n\r\n            <div className=\"sound-volume-box\">\r\n                <h4>Volume</h4>\r\n                <input className=\"sound-volume\" type=\"range\" min=\"0\" max=\"100\" value={volume} onChange={volumeHandler} disabled={!props.power}/>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default SoundPanel;","import React, {useState} from 'react';\nimport './App.css';\nimport Buttons from './Components/Buttons';\nimport SoundPanel from './Components/SoundPanel';\n\nfunction App() {\n  const [power, setPower] = useState(true);\n\n  return (\n    <main id=\"drum-machine\">\n      {/* <div id=\"display\"></div> */}\n      <Buttons power={power}/>\n      <SoundPanel power={power} setPower={setPower}/>\n    </main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}