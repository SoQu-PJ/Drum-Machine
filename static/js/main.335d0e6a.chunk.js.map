{"version":3,"sources":["Components/Buttons.js","Components/SoundPanel.js","App.js","reportWebVitals.js","index.js"],"names":["Buttons","props","buttonHandler","e","useEffect","document","querySelectorAll","forEach","el","disabled","power","addEventListener","removeEventListener","React","createElement","className","id","SoundPanel","_useState","useState","_useState2","_slicedToArray","monitorValue","setMonitorValue","_useState3","_useState4","volume","setVolume","type","onClick","querySelector","checked","setPower","defaultChecked","min","max","value","onChange","target","concat","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"qMAqDeA,oBA9CC,SAAAC,GAIZ,IAAMC,EAAgB,SAAAC,KA2BtB,OAZAC,oBAAU,WACaC,SAASC,iBAAiB,aAElCC,QAAQ,SAAAC,GAKf,OAJAA,EAAGC,UAAYR,EAAMS,MAGrBF,EAAGG,iBAAiB,QAAST,GACtB,kBAAMM,EAAGI,oBAAoB,QAASV,QAKrDW,IAAAC,cAAA,WAASC,UAAU,gBACfF,IAAAC,cAAA,UAAQE,GAAG,IAAID,UAAU,YAAW,KACpCF,IAAAC,cAAA,UAAQE,GAAG,IAAID,UAAU,YAAW,KACpCF,IAAAC,cAAA,UAAQE,GAAG,IAAID,UAAU,YAAW,KACpCF,IAAAC,cAAA,UAAQE,GAAG,IAAID,UAAU,YAAW,KACpCF,IAAAC,cAAA,UAAQE,GAAG,IAAID,UAAU,YAAW,KACpCF,IAAAC,cAAA,UAAQE,GAAG,IAAID,UAAU,YAAW,KACpCF,IAAAC,cAAA,UAAQE,GAAG,IAAID,UAAU,YAAW,KACpCF,IAAAC,cAAA,UAAQE,GAAG,IAAID,UAAU,YAAW,KACpCF,IAAAC,cAAA,UAAQE,GAAG,IAAID,UAAU,YAAW,QCb7BE,EA/BI,SAAAhB,GAAS,IAAAiB,EACgBC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA7CI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAAAI,EACRL,mBAAS,IAAGM,EAAAJ,YAAAG,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAWxB,OACIZ,IAAAC,cAAA,WAASC,UAAU,eACfF,IAAAC,cAAA,SAAOC,UAAU,UACjBF,IAAAC,cAAA,UAAI,SACAD,IAAAC,cAAA,SAAOC,UAAU,QAAQa,KAAK,WAAWC,QARhC,SAAA1B,GACjBE,SAASyB,cAAc,UAAUC,QAAU9B,EAAM+B,UAAS,GAAQ/B,EAAM+B,UAAS,IAOTC,gBAAc,IAC9EpB,IAAAC,cAAA,QAAMC,UAAU,kBAGpBF,IAAAC,cAAA,OAAKC,UAAU,WAAWd,EAAMS,MAAQY,EAAe,IAEvDT,IAAAC,cAAA,OAAKC,UAAU,oBACXF,IAAAC,cAAA,UAAI,UACJD,IAAAC,cAAA,SAAOC,UAAU,eAAea,KAAK,QAAQM,IAAI,IAAIC,IAAI,MAAMC,MAAOV,EAAQW,SArBpE,SAAAlC,GAClBwB,EAAUxB,EAAEmC,OAAOF,OACnBb,EAAe,WAAAgB,OAAYb,KAmBoFjB,UAAWR,EAAMS,WCZzH8B,MAZf,WAAe,IAAAtB,EACaC,oBAAS,GAAKC,EAAAC,YAAAH,EAAA,GAAjCR,EAAKU,EAAA,GAAEY,EAAQZ,EAAA,GAEtB,OACEP,IAAAC,cAAA,QAAME,GAAG,gBAEPH,IAAAC,cAACd,EAAO,CAACU,MAAOA,IAChBG,IAAAC,cAACG,EAAU,CAACP,MAAOA,EAAOsB,SAAUA,MCA3BS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAzC,EAAA,GAAA0C,KAAAD,EAAAE,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWjD,SAASkD,eAAe,SACpDC,OACH3C,IAAAC,cAACD,IAAM4C,WAAU,KACf5C,IAAAC,cAAC0B,EAAG,QAORC","file":"static/js/main.335d0e6a.chunk.js","sourcesContent":["import React, {useEffect} from \"react\";\r\nimport {Howl, Howler} from 'howler';\r\nimport \"../App.css\";\r\nimport sound from \"./sound.json\";\r\n// import sound1 from \"../Sound/Heater-1.mp3\";\r\n\r\n\r\nconst Buttons = props => {\r\n\r\n    // allButtons.forEach(el => el.disabled = !props.power);\r\n\r\n    const buttonHandler = e =>{\r\n        // for(const property in sound){\r\n        //     if(e.target.id === property){\r\n        //         const audio = new Howl({\r\n        //             src: [import(\"../Sound/Heater-1.mp3\")],\r\n        //             html5: true,\r\n        //             volume: 1.0\r\n        //         });\r\n                  \r\n        //         audio.play();\r\n        //     }\r\n                \r\n        // }\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        const allButtons = document.querySelectorAll(\".drum-pad\");\r\n\r\n        allButtons.forEach(el => {\r\n            el.disabled = !props.power;\r\n\r\n\r\n            el.addEventListener(\"click\", buttonHandler);\r\n            return () => el.removeEventListener(\"click\", buttonHandler);\r\n        })\r\n    });\r\n\r\n    return(\r\n    <section className=\"sound-button\">\r\n        <button id=\"Q\" className=\"drum-pad\">Q</button>\r\n        <button id=\"W\" className=\"drum-pad\">W</button>\r\n        <button id=\"E\" className=\"drum-pad\">E</button>\r\n        <button id=\"A\" className=\"drum-pad\">A</button>\r\n        <button id=\"S\" className=\"drum-pad\">S</button>\r\n        <button id=\"D\" className=\"drum-pad\">D</button>\r\n        <button id=\"Z\" className=\"drum-pad\">Z</button>\r\n        <button id=\"X\" className=\"drum-pad\">X</button>\r\n        <button id=\"C\" className=\"drum-pad\">C</button>\r\n    </section>\r\n    )\r\n}\r\n\r\nexport default Buttons;","import React, {useState} from \"react\";\r\nimport '../App.css';\r\n\r\n\r\nconst SoundPanel = props => {\r\n    const [monitorValue, setMonitorValue] = useState(\"\");\r\n    const [volume, setVolume] = useState(50); \r\n\r\n    const volumeHandler = e =>{\r\n        setVolume(e.target.value);\r\n        setMonitorValue(`Volume: ${volume}`);\r\n    }\r\n\r\n    const powerHandler = e => {\r\n        document.querySelector(\".power\").checked ? props.setPower(true) : props.setPower(false);\r\n    }\r\n\r\n    return(\r\n        <section className=\"sound-panel\">\r\n            <label className=\"switch\">\r\n            <h4>Power</h4>  \r\n                <input className=\"power\" type=\"checkbox\" onClick={powerHandler} defaultChecked/>\r\n                <span className=\"slider round\"></span>\r\n            </label>\r\n            \r\n            <div className=\"monitor\">{props.power ? monitorValue : \"\"}</div>\r\n\r\n            <div className=\"sound-volume-box\">\r\n                <h4>Volume</h4>\r\n                <input className=\"sound-volume\" type=\"range\" min=\"0\" max=\"100\" value={volume} onChange={volumeHandler} disabled={!props.power}/>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default SoundPanel;","import React, {useState} from 'react';\nimport './App.css';\nimport Buttons from './Components/Buttons';\nimport SoundPanel from './Components/SoundPanel';\n\nfunction App() {\n  const [power, setPower] = useState(true);\n\n  return (\n    <main id=\"drum-machine\">\n      {/* <div id=\"display\"></div> */}\n      <Buttons power={power}/>\n      <SoundPanel power={power} setPower={setPower}/>\n    </main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}