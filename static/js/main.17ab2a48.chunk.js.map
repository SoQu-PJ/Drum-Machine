{"version":3,"sources":["Sound/Heater-1.mp3","Sound/Heater-2.mp3","Sound/Heater-3.mp3","Sound/Heater-4_1.mp3","Sound/Heater-6.mp3","Sound/Dsc_Oh.mp3","Sound/Kick_n_Hat.mp3","Sound/RP4_KICK_1.mp3","Sound/Cev_H2.mp3","Components/Buttons.js","Components/SoundPanel.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Buttons","props","buttonHandler","e","target","id","songArray","Q","W","E","A","S","D","Z","X","C","property","sound","Howl","src","volume","play","setMonitorValue","useEffect","document","querySelectorAll","forEach","el","disabled","power","addEventListener","removeEventListener","React","createElement","className","SoundPanel","type","onClick","querySelector","checked","setPower","defaultChecked","monitorValue","min","max","step","value","onChange","setVolume","concat","App","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","_useState5","_useState6","reportWebVitals","onPerfEntry","Function","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"yOAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mWCwEzBC,EAxDC,SAAAC,GACZ,IAAMC,EAAgB,SAAAC,GAClB,IAAMC,EAASD,EAAEC,OAAOC,GAClBC,EAAY,CACdC,EAAKA,IACLC,EAAKA,IACLC,EAAKA,IACLC,EAAKA,IACLC,EAAKA,IACLC,EAAKA,IACLC,EAAKA,IACLC,EAAKA,IACLC,EAAKA,KAIT,IAAI,IAAMC,KAAYC,EACfb,IAAWY,GACI,IAAIE,OAAK,CACnBC,IAAK,CAACb,EAAUF,IAChBgB,OAAQnB,EAAMmB,SAEZC,OAIdpB,EAAMqB,gBAAgBL,EAAMb,KAehC,OAZAmB,oBAAU,WACaC,SAASC,iBAAiB,aAElCC,QAAQ,SAAAC,GAKf,OAJAA,EAAGC,UAAY3B,EAAM4B,MAGrBF,EAAGG,iBAAiB,QAAS5B,GACtB,kBAAMyB,EAAGI,oBAAoB,QAAS7B,QAKrD8B,IAAAC,cAAA,WAASC,UAAU,gBACfF,IAAAC,cAAA,UAAQ5B,GAAG,IAAI6B,UAAU,YAAW,KACpCF,IAAAC,cAAA,UAAQ5B,GAAG,IAAI6B,UAAU,YAAW,KACpCF,IAAAC,cAAA,UAAQ5B,GAAG,IAAI6B,UAAU,YAAW,KACpCF,IAAAC,cAAA,UAAQ5B,GAAG,IAAI6B,UAAU,YAAW,KACpCF,IAAAC,cAAA,UAAQ5B,GAAG,IAAI6B,UAAU,YAAW,KACpCF,IAAAC,cAAA,UAAQ5B,GAAG,IAAI6B,UAAU,YAAW,KACpCF,IAAAC,cAAA,UAAQ5B,GAAG,IAAI6B,UAAU,YAAW,KACpCF,IAAAC,cAAA,UAAQ5B,GAAG,IAAI6B,UAAU,YAAW,KACpCF,IAAAC,cAAA,UAAQ5B,GAAG,IAAI6B,UAAU,YAAW,OCnC7BC,EA5BI,SAAAlC,GAUf,OACI+B,IAAAC,cAAA,WAASC,UAAU,eACfF,IAAAC,cAAA,SAAOC,UAAU,UACjBF,IAAAC,cAAA,UAAI,SACAD,IAAAC,cAAA,SAAOC,UAAU,QAAQE,KAAK,WAAWC,QARhC,SAAAlC,GACjBqB,SAASc,cAAc,UAAUC,QAAUtC,EAAMuC,UAAS,GAAQvC,EAAMuC,UAAS,IAOTC,gBAAc,IAC9ET,IAAAC,cAAA,QAAMC,UAAU,kBAGpBF,IAAAC,cAAA,OAAK5B,GAAG,UAAU6B,UAAU,WAAWjC,EAAM4B,MAAQ5B,EAAMyC,aAAe,IAE1EV,IAAAC,cAAA,OAAKC,UAAU,oBACXF,IAAAC,cAAA,UAAI,UACJD,IAAAC,cAAA,SAAOC,UAAU,eAAeE,KAAK,QAAQO,IAAI,IAAIC,IAAI,MAAMC,KAAK,MAAMC,MAAO7C,EAAMmB,OAAQ2B,SArBrF,SAAA5C,GAClBF,EAAM+C,UAAU7C,EAAEC,OAAO0C,OACzB7C,EAAMqB,gBAAe,WAAA2B,OAAYhD,EAAMmB,UAmByFQ,UAAW3B,EAAM4B,WCR1IqB,MAbf,WAAe,IAAAC,EAC2BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA7CT,EAAYW,EAAA,GAAE/B,EAAe+B,EAAA,GAAAE,EACVH,oBAAS,GAAKI,EAAAF,YAAAC,EAAA,GAAjC1B,EAAK2B,EAAA,GAAEhB,EAAQgB,EAAA,GAAAC,EACML,mBAAS,IAAIM,EAAAJ,YAAAG,EAAA,GAAlCrC,EAAMsC,EAAA,GAAEV,EAASU,EAAA,GAExB,OACE1B,IAAAC,cAAA,QAAM5B,GAAG,gBACP2B,IAAAC,cAACjC,EAAO,CAAC6B,MAAOA,EAAOT,OAAQA,EAAQE,gBAAiBA,IACxDU,IAAAC,cAACE,EAAU,CAACN,MAAOA,EAAOW,SAAUA,EAAUpB,OAAQA,EAAQ4B,UAAWA,EAAWN,aAAcA,EAAcpB,gBAAiBA,MCDxHqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC/D,EAAAK,EAAA,GAAA2D,KAAAhE,EAAAiE,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCDDU,IAASC,WAAW/C,SAASgD,eAAe,SACpDC,OACHzC,IAAAC,cAACD,IAAM0C,WAAU,KACf1C,IAAAC,cAACiB,EAAG,QAORS","file":"static/js/main.17ab2a48.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Heater-1.b1cfea05.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Heater-2.0d219666.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Heater-3.632e8772.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Heater-4_1.d9de8a50.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Heater-6.3062daca.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Dsc_Oh.5c9f8087.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Kick_n_Hat.200b4bd3.mp3\";","module.exports = __webpack_public_path__ + \"static/media/RP4_KICK_1.09fda256.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Cev_H2.34d1150f.mp3\";","import React, {useEffect} from \"react\";\r\nimport {Howl} from 'howler';\r\nimport \"../App.css\";\r\nimport sound from \"./sound.json\";\r\n\r\nimport Q from \"../Sound/Heater-1.mp3\";\r\nimport W from \"../Sound/Heater-2.mp3\";\r\nimport E from \"../Sound/Heater-3.mp3\";\r\nimport A from \"../Sound/Heater-4_1.mp3\";\r\nimport S from \"../Sound/Heater-6.mp3\";\r\nimport D from \"../Sound/Dsc_Oh.mp3\";\r\nimport Z from \"../Sound/Kick_n_Hat.mp3\";\r\nimport X from \"../Sound/RP4_KICK_1.mp3\";\r\nimport C from \"../Sound/Cev_H2.mp3\";\r\n\r\n\r\nconst Buttons = props => {\r\n    const buttonHandler = e =>{\r\n        const target = e.target.id;\r\n        const songArray = {\r\n            \"Q\": Q,\r\n            \"W\": W,\r\n            \"E\": E,\r\n            \"A\": A,\r\n            \"S\": S,\r\n            \"D\": D,\r\n            \"Z\": Z,\r\n            \"X\": X,\r\n            \"C\": C\r\n        }\r\n\r\n        \r\n        for(const property in sound){\r\n            if(target === property){\r\n                const audio = new Howl({\r\n                    src: [songArray[target]],\r\n                    volume: props.volume\r\n                });\r\n                audio.play();\r\n            }\r\n        }\r\n\r\n        props.setMonitorValue(sound[target]);\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        const allButtons = document.querySelectorAll(\".drum-pad\");\r\n\r\n        allButtons.forEach(el => {\r\n            el.disabled = !props.power;\r\n\r\n\r\n            el.addEventListener(\"click\", buttonHandler);\r\n            return () => el.removeEventListener(\"click\", buttonHandler);\r\n        })\r\n    });\r\n\r\n    return(\r\n    <section className=\"sound-button\">\r\n        <button id=\"Q\" className=\"drum-pad\">Q</button>\r\n        <button id=\"W\" className=\"drum-pad\">W</button>\r\n        <button id=\"E\" className=\"drum-pad\">E</button>\r\n        <button id=\"A\" className=\"drum-pad\">A</button>\r\n        <button id=\"S\" className=\"drum-pad\">S</button>\r\n        <button id=\"D\" className=\"drum-pad\">D</button>\r\n        <button id=\"Z\" className=\"drum-pad\">Z</button>\r\n        <button id=\"X\" className=\"drum-pad\">X</button>\r\n        <button id=\"C\" className=\"drum-pad\">C</button>\r\n    </section>\r\n    )\r\n}\r\n\r\nexport default Buttons;","import React from \"react\";\r\nimport '../App.css';\r\n\r\n\r\nconst SoundPanel = props => {\r\n    const volumeHandler = e =>{\r\n        props.setVolume(e.target.value);\r\n        props.setMonitorValue(`Volume: ${props.volume}`);\r\n    }\r\n\r\n    const powerHandler = e => {\r\n        document.querySelector(\".power\").checked ? props.setPower(true) : props.setPower(false);\r\n    }\r\n\r\n    return(\r\n        <section className=\"sound-panel\">\r\n            <label className=\"switch\">\r\n            <h4>Power</h4>  \r\n                <input className=\"power\" type=\"checkbox\" onClick={powerHandler} defaultChecked/>\r\n                <span className=\"slider round\"></span>\r\n            </label>\r\n            \r\n            <div id=\"display\" className=\"monitor\">{props.power ? props.monitorValue : \"\"}</div>\r\n\r\n            <div className=\"sound-volume-box\">\r\n                <h4>Volume</h4>\r\n                <input className=\"sound-volume\" type=\"range\" min=\"0\" max=\"1.0\" step=\"0.1\" value={props.volume} onChange={volumeHandler} disabled={!props.power}/>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default SoundPanel;","import React, {useState} from 'react';\nimport './App.css';\nimport Buttons from './Components/Buttons';\nimport SoundPanel from './Components/SoundPanel';\n\nfunction App() {\n  const [monitorValue, setMonitorValue] = useState(\"\");\n  const [power, setPower] = useState(true);\n  const [volume, setVolume] = useState(0.5);\n\n  return (\n    <main id=\"drum-machine\">\n      <Buttons power={power} volume={volume} setMonitorValue={setMonitorValue}/>\n      <SoundPanel power={power} setPower={setPower} volume={volume} setVolume={setVolume} monitorValue={monitorValue} setMonitorValue={setMonitorValue}/>\n    </main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}